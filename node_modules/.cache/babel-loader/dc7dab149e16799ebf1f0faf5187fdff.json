{"ast":null,"code":"import faker from 'faker';\nconst request = indexedDB.open(\"offline_db\", 1);\nlet db;\n\nrequest.onupgradeneeded = function () {\n  // The database did not previously exist, so create object stores and indexes.\n  db = request.result;\n  const store = db.createObjectStore(\"customers\", {\n    keyPath: \"id\"\n  }); // Create indexes\n\n  store.createIndex(\"by_name\", \"name\", {\n    unique: false\n  });\n  store.createIndex(\"by_location\", \"localisation\");\n\n  for (let i = 0; i < 20; i++) {\n    store.add({\n      id: i,\n      url: \"customers/\".concat(i),\n      name: \"\".concat(faker.name.firstName(), \" \").concat(faker.name.lastName()),\n      // Création d'utilisateur aléatoire (nom + prenom),\n      localisation: \"\".concat(faker.address.city(), \", \").concat(faker.address.countryCode()),\n      //faker.address,\n      latestOrderUrl: \"orders/\".concat(faker.random.number())\n    });\n  }\n\n  store.add({\n    id: 128,\n    url: \"customers/128\",\n    name: \"Baptiste\".concat(\" \", \"scherrier\"),\n    // Création d'utilisateur aléatoire (nom + prenom),\n    localisation: \"Hazebrouck\".concat(\", \", \"59190\"),\n    //faker.address,\n    latestOrderUrl: \"orders/\".concat(faker.random.number())\n  });\n};\n\nrequest.onsuccess = function () {\n  db = request.result;\n};\n\nrequest.onblocked = function (event) {\n  // If some other tab is loaded with the database, then it needs to be closed\n  // before we can proceed.\n  alert(\"Please close all other tabs with this site open!\");\n};","map":{"version":3,"sources":["C:\\Users\\Baptiste\\Desktop\\demo-indexed-db-master\\src\\initializeIndexedDB.js"],"names":["faker","request","indexedDB","open","db","onupgradeneeded","result","store","createObjectStore","keyPath","createIndex","unique","i","add","id","url","name","firstName","lastName","localisation","address","city","countryCode","latestOrderUrl","random","number","onsuccess","onblocked","event","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGC,SAAS,CAACC,IAAV,CAAe,YAAf,EAA6B,CAA7B,CAAhB;AACA,IAAIC,EAAJ;;AAEAH,OAAO,CAACI,eAAR,GAA0B,YAAW;AACnC;AACAD,EAAAA,EAAE,GAAGH,OAAO,CAACK,MAAb;AACA,QAAMC,KAAK,GAAGH,EAAE,CAACI,iBAAH,CAAqB,WAArB,EAAkC;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAlC,CAAd,CAHmC,CAKnC;;AACAF,EAAAA,KAAK,CAACG,WAAN,CAAkB,SAAlB,EAA6B,MAA7B,EAAqC;AAACC,IAAAA,MAAM,EAAE;AAAT,GAArC;AACAJ,EAAAA,KAAK,CAACG,WAAN,CAAkB,aAAlB,EAAiC,cAAjC;;AAGA,OAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BL,IAAAA,KAAK,CAACM,GAAN,CAAU;AACRC,MAAAA,EAAE,EAAEF,CADI;AAERG,MAAAA,GAAG,sBAAeH,CAAf,CAFK;AAGRI,MAAAA,IAAI,YAAKhB,KAAK,CAACgB,IAAN,CAAWC,SAAX,EAAL,cAA+BjB,KAAK,CAACgB,IAAN,CAAWE,QAAX,EAA/B,CAHI;AAGoD;AAC5DC,MAAAA,YAAY,YAAKnB,KAAK,CAACoB,OAAN,CAAcC,IAAd,EAAL,eAA8BrB,KAAK,CAACoB,OAAN,CAAcE,WAAd,EAA9B,CAJJ;AAIgE;AACxEC,MAAAA,cAAc,mBAAYvB,KAAK,CAACwB,MAAN,CAAaC,MAAb,EAAZ;AALN,KAAV;AAOD;;AAEDlB,EAAAA,KAAK,CAACM,GAAN,CAAU;AACRC,IAAAA,EAAE,EAAE,GADI;AAERC,IAAAA,GAAG,iBAFK;AAGRC,IAAAA,IAAI,EAAK,UAAL,aAAmB,WAAnB,CAHI;AAG8B;AACtCG,IAAAA,YAAY,EAAK,YAAL,cAAsB,OAAtB,CAJJ;AAIoC;AAC5CI,IAAAA,cAAc,mBAAYvB,KAAK,CAACwB,MAAN,CAAaC,MAAb,EAAZ;AALN,GAAV;AAOD,CA3BD;;AA6BAxB,OAAO,CAACyB,SAAR,GAAoB,YAAW;AAC7BtB,EAAAA,EAAE,GAAGH,OAAO,CAACK,MAAb;AACD,CAFD;;AAIAL,OAAO,CAAC0B,SAAR,GAAoB,UAASC,KAAT,EAAgB;AAClC;AACA;AACAC,EAAAA,KAAK,CAAC,kDAAD,CAAL;AACD,CAJD","sourcesContent":["import faker from 'faker';\n\nconst request = indexedDB.open(\"offline_db\", 1);\nlet db;\n\nrequest.onupgradeneeded = function() {\n  // The database did not previously exist, so create object stores and indexes.\n  db = request.result;\n  const store = db.createObjectStore(\"customers\", {keyPath: \"id\"});\n\n  // Create indexes\n  store.createIndex(\"by_name\", \"name\", {unique: false});\n  store.createIndex(\"by_location\", \"localisation\");\n\n\n  for(let i = 0; i < 20; i++) {\n    store.add({\n      id: i,\n      url: `customers/${i}`,\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`, // Création d'utilisateur aléatoire (nom + prenom),\n      localisation: `${faker.address.city()}, ${faker.address.countryCode()}`,//faker.address,\n      latestOrderUrl: `orders/${faker.random.number()}`\n    });\n  }\n\n  store.add({\n    id: 128,\n    url: `customers/128`,\n    name: `${\"Baptiste\"} ${\"scherrier\"}`, // Création d'utilisateur aléatoire (nom + prenom),\n    localisation: `${\"Hazebrouck\"}, ${\"59190\"}`,//faker.address,\n    latestOrderUrl: `orders/${faker.random.number()}`\n  });\n};\n\nrequest.onsuccess = function() {\n  db = request.result;\n};\n\nrequest.onblocked = function(event) {\n  // If some other tab is loaded with the database, then it needs to be closed\n  // before we can proceed.\n  alert(\"Please close all other tabs with this site open!\");\n};\n\n"]},"metadata":{},"sourceType":"module"}